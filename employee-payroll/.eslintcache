[{"E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\index.js":"1","E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\App.js":"2","E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\reportWebVitals.js":"3","E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\components\\payroll-form\\payroll-form.jsx":"4","E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\services\\employee-service.js":"5","E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\config\\config.js":"6","E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\services\\axios-service.js":"7","E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\components\\home\\home.jsx":"8","E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\components\\display\\display.jsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":769,"mtime":1608523965300,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":15805,"mtime":1608524355233,"results":"14","hashOfConfig":"11"},{"size":795,"mtime":1608524661078,"results":"15","hashOfConfig":"11"},{"size":60,"mtime":1608479209528,"results":"16","hashOfConfig":"11"},{"size":635,"mtime":1608524493022,"results":"17","hashOfConfig":"11"},{"size":3157,"mtime":1608525689012,"results":"18","hashOfConfig":"11"},{"size":3160,"mtime":1608524123422,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1l6v4w1",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\index.js",[],["43","44"],"E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\App.js",["45"],"import logo from './logo.svg';\nimport './App.css';\nimport PayrollForm from \"../src/components/payroll-form/payroll-form\";\nimport Home from \"./components/home/home.jsx\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n          <Route path=\"/payroll-form\">\n            <PayrollForm />\n          </Route>\n          <Route exact path=\"/payroll-form/:id\">\n            <PayrollForm />\n          </Route>\n          <Route exact path=\"\">\n            <Redirect exact from=\"/\" to=\"/home\" />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\reportWebVitals.js",[],"E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\components\\payroll-form\\payroll-form.jsx",["46"],"import React, { useState, useEffect } from \"react\";\r\nimport profile1 from \"../../assets/profile-images/Ellipse 1.png\";\r\nimport profile2 from \"../../assets/profile-images/Ellipse -3.png\";\r\nimport profile3 from \"../../assets/profile-images/Ellipse -7.png\";\r\nimport profile4 from \"../../assets/profile-images/Ellipse -8.png\";\r\nimport \"./payroll-form.scss\";\r\nimport logo from \"../../assets/images/logo.png\";\r\nimport EmployeeService from \"../../services/employee-service\";\r\nimport { useParams, Link, withRouter } from \"react-router-dom\";\r\n\r\nconst PayrollForm = (props) => {\r\n    let initialValue = {\r\n        name: '',\r\n        profileArray: [\r\n            { url: '../../assets/profile-images/Ellipse 1.png' },\r\n            { url: '../../assets/profile-images/Ellipse -3.png' },\r\n            { url: '../../assets/profile-images/Ellipse -7.png' },\r\n            { url: '../../assets/profile-images/Ellipse -8.png' }\r\n\r\n        ],\r\n        allDepartment: [\r\n            'HR', 'Sales', 'Finance', 'Engineer', 'Others'\r\n        ],\r\n        departMentValue: [],\r\n        gender: '',\r\n        salary: '',\r\n        day: '1',\r\n        month: 'Jan',\r\n        year: '2020',\r\n        startDate: '',\r\n        notes: '',\r\n        id: '',\r\n        profileUrl: '',\r\n        isUpdate: false,\r\n        error: {\r\n            department: '',\r\n            name: '',\r\n            gender: '',\r\n            salary: '',\r\n            profileUrl: '',\r\n            startDate: ''\r\n        }\r\n    }\r\n    const [formValue, setForm] = useState(initialValue);\r\n    const params = useParams();\r\n    const employeeService = new EmployeeService();\r\n\r\n    useEffect(() => {\r\n        if (params.id) {\r\n            getDataById(params.id);\r\n        }\r\n    }, []);\r\n\r\n    const getDataById = (id) => {\r\n        employeeService\r\n            .getEmployee(id)\r\n            .then((data) => {\r\n                console.log(\"data is \", data.data);\r\n                let obj = data.data;\r\n                setData(obj);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"err is \", err);\r\n            });\r\n    };\r\n\r\n    const setData = (obj) => {\r\n        let array = obj.startDate.split(\" \");\r\n        setForm({\r\n            ...formValue,\r\n            ...obj,\r\n            profileUrl: obj.profile,\r\n            departMentValue: obj.department,\r\n            isUpdate: true,\r\n            day: array[0],\r\n            month: array[1],\r\n            year: array[2],\r\n        });\r\n    };\r\n\r\n    const changeValue = (event) => {\r\n        setForm({ ...formValue, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const onCheckChange = (name) => {\r\n        let index = formValue.departMentValue.indexOf(name);\r\n\r\n        let checkArray = [...formValue.departMentValue]\r\n        if (index > -1)\r\n            checkArray.splice(index, 1)\r\n        else\r\n            checkArray.push(name);\r\n        setForm({ ...formValue, departMentValue: checkArray });\r\n    }\r\n    const getChecked = (name) => {\r\n        return formValue.departMentValue && formValue.departMentValue.includes(name);\r\n    }\r\n\r\n    const validData = async () => {\r\n        let isError = false;\r\n        let error = {\r\n            department: '',\r\n            name: '',\r\n            gender: '',\r\n            salary: '',\r\n            profileUrl: '',\r\n            startDate: ''\r\n        }\r\n        if (formValue.name.length < 1) {\r\n            error.name = 'name is required field'\r\n            isError = true;\r\n        }\r\n        if (formValue.gender.length < 1) {\r\n            error.gender = 'gender is required field'\r\n            isError = true;\r\n        }\r\n        if (formValue.salary.length < 1) {\r\n            error.salary = 'salary is required field'\r\n            isError = true;\r\n        }\r\n        if (formValue.profileUrl.length < 1) {\r\n            error.profileUrl = 'profile is required field'\r\n            isError = true;\r\n        }\r\n\r\n        if (formValue.departMentValue.length < 1) {\r\n            error.department = 'department is required field'\r\n            isError = true;\r\n        }\r\n        await setForm({ ...formValue, error: error })\r\n        return isError;\r\n    }\r\n\r\n    const save = async (event) => {\r\n        event.preventDefault();\r\n        if (await validData()) {\r\n            console.log(\"error\", formValue);\r\n            return;\r\n        }\r\n        //         var dept = [];\r\n        // for (let i =0 ;i<formValue.departMentValue.length;i++){\r\n        //     dept.push({department:formValue.departMentValue[i]})\r\n        // }\r\n        var dept = formValue.departMentValue.map((data) => {\r\n            return { \"department\": data }\r\n        })\r\n        let object = {\r\n            name: formValue.name,\r\n            department: dept,\r\n            gender: formValue.gender,\r\n            salary: formValue.salary,\r\n            startDate: `${formValue.day} ${formValue.month} ${formValue.year}`,\r\n            notes: formValue.notes,\r\n            id: formValue.id,\r\n            profile: formValue.profileUrl,\r\n        };\r\n        if (formValue.isUpdate) {\r\n            employeeService\r\n                .updateEmployee(object)\r\n                .then((data) => {\r\n                    console.log(\"data after update\", data);\r\n                    props.history.push(\"\");\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"Error after update\");\r\n                });\r\n        } else {\r\n            employeeService\r\n                .addEmployee(object)\r\n                .then((data) => {\r\n                    console.log(\"Employee payroll added\");\r\n                    props.history.push(\"\");\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"error occured while adding employee\");\r\n                });\r\n        }\r\n    };\r\n    const reset = () => {\r\n        setForm({ ...initialValue, id: formValue.id, isUpdate: formValue.isUpdate });\r\n\r\n        console.log(formValue);\r\n    }\r\n    return (\r\n        <div className=\"payroll-main\">\r\n            <header className='header row center'>\r\n                <div className=\"logo\">\r\n                    <img src={logo} alt=\"\" />\r\n                    <div>\r\n                        <span className=\"emp-text\">EMPLOYEE</span> <br />\r\n                        <span className=\"emp-text emp-payroll\">PAYROLL</span>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <div className=\"content\">\r\n                <form className=\"form\" action=\"#\" onSubmit={save}>\r\n                    <div className=\"form-head\">Employee Payroll form</div>\r\n                    <div className=\"row\">\r\n                        <label className=\"label text\" htmlFor=\"name\">Name</label>\r\n                        <input className=\"input\" type=\"text\" id=\"name\" name=\"name\" value={formValue.name} onChange={changeValue} placeholder=\"Your name..\" />\r\n                    </div>\r\n                    <div className=\"error\" > {formValue.error.name} </div>\r\n                    <div className=\"row\">\r\n                        <label className=\"label text\" htmlFor=\"profileUrl\">Profile image</label>\r\n                        <div className=\"profile-radio-button\">\r\n                            <label >\r\n                                <input type=\"radio\" checked={formValue.profileUrl === '../../assets/profile-images/Ellipse -3.png'} name=\"profileUrl\" value=\"../../assets/profile-images/Ellipse -3.png\" onChange={changeValue} />\r\n                                <img className=\"profile\" src={profile1} alt=\"profile\" />\r\n                            </label>\r\n                            <label >\r\n                                <input type=\"radio\" name=\"profileUrl\" checked={formValue.profileUrl === '../../assets/profile-images/Ellipse 1.png'} value=\"../../assets/profile-images/Ellipse 1.png\" onChange={changeValue} />\r\n                                <img className=\"profile\" src={profile2} alt=\"profile\" />\r\n                            </label>\r\n                            <label >\r\n                                <input type=\"radio\" name=\"profileUrl\" checked={formValue.profileUrl === '../../assets/profile-images/Ellipse -8.png'} value=\"../../assets/profile-images/Ellipse -8.png\" onChange={changeValue} />\r\n                                <img className=\"profile\" src={profile3} alt=\"profile\" />\r\n                            </label>\r\n                            <label >\r\n                                <input type=\"radio\" name=\"profileUrl\" checked={formValue.profileUrl === '../../assets/profile-images/Ellipse -7.png'} value=\"../../assets/profile-images/Ellipse -7.png\" onChange={changeValue} />\r\n                                <img className=\"profile\" src={profile4} alt=\"profile\" />\r\n                            </label>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"error\" > {formValue.error.profileUrl} </div>\r\n                    <div className=\"row\">\r\n                        <label className=\"label text\" htmlFor=\"gender\">Gender</label>\r\n                        <div>\r\n                            <input type=\"radio\" id=\"male\" checked={formValue.gender === 'male'} onChange={changeValue} name=\"gender\" value=\"male\" />\r\n                            <label className=\"text\" htmlFor=\"male\">Male</label>\r\n                            <input type=\"radio\" id=\"female\" checked={formValue.gender === 'female'} onChange={changeValue} name=\"gender\" value=\"female\" />\r\n                            <label className=\"text\" htmlFor=\"female\">Female</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"error\" > {formValue.error.gender} </div>\r\n\r\n                    <div className=\"row\">\r\n                        <label className=\"label text\" htmlFor=\"department\">Department</label>\r\n                        <div>\r\n                            {formValue.allDepartment.map(item => (\r\n                                <span key={item}>\r\n                                    <input className=\"checkbox\" type=\"checkbox\" onChange={() => onCheckChange(item)} name={item}\r\n                                        checked={getChecked(item)} value={item} />\r\n                                    <label className=\"text\" htmlFor={item}>{item}</label>\r\n                                </span>\r\n                            ))}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"error\" > {formValue.error.department} </div>\r\n\r\n\r\n                    <div className=\"row\">\r\n                        <label className=\"label text\" htmlFor=\"salary\">Salary</label>\r\n                        <input className=\"input\" type=\"range\" onChange={changeValue} id=\"salary\" value={formValue.salary} name=\"salary\" placeholder=\"Salary\"\r\n                            min=\"1000\" max=\"10000\" step=\"100\" />\r\n                    </div>\r\n                    <div className=\"error\" > {formValue.error.salary} </div>\r\n\r\n\r\n\r\n\r\n                    <div className=\"row\">\r\n                        <label className=\"label text\" htmlFor=\"startDate\">Start Date</label>\r\n                        <div>\r\n                            <select value={formValue.day} onChange={changeValue} id=\"day\" name=\"day\">\r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"6\">6</option>\r\n                                <option value=\"7\">7</option>\r\n                                <option value=\"8\">8</option>\r\n                                <option value=\"9\">9</option>\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"11\">11</option>\r\n                                <option value=\"12\">12</option>\r\n                                <option value=\"13\">13</option>\r\n                                <option value=\"14\">14</option>\r\n                                <option value=\"15\">15</option>\r\n                                <option value=\"16\">16</option>\r\n                                <option value=\"17\">17</option>\r\n                                <option value=\"18\">18</option>\r\n                                <option value=\"19\">19</option>\r\n                                <option value=\"20\">20</option>\r\n                                <option value=\"21\">21</option>\r\n                                <option value=\"22\">22</option>\r\n                                <option value=\"23\">23</option>\r\n                                <option value=\"24\">24</option>\r\n                                <option value=\"25\">25</option>\r\n                                <option value=\"26\">26</option>\r\n                                <option value=\"27\">27</option>\r\n                                <option value=\"28\">28</option>\r\n                                <option value=\"29\">29</option>\r\n                                <option value=\"30\">30</option>\r\n                                <option value=\"31\">31</option>\r\n                            </select>\r\n                            <select value={formValue.month} onChange={changeValue} id=\"month\" name=\"month\">\r\n                                <option value=\"Jan\">January</option>\r\n                                <option value=\"Feb\">Febuary</option>\r\n                                <option value=\"March\">March</option>\r\n                                <option value=\"April\">April</option>\r\n                                <option value=\"May\">May</option>\r\n                                <option value=\"June\">June</option>\r\n                                <option value=\"July\">July</option>\r\n                                <option value=\"Aug\">August</option>\r\n                                <option value=\"Sept\">September</option>\r\n                                <option value=\"Oct\">October</option>\r\n                                <option value=\"Nov\">November</option>\r\n                                <option value=\"Dec\">December</option>\r\n                            </select>\r\n                            <select value={formValue.year} onChange={changeValue} id=\"year\" name=\"year\">\r\n                                <option value=\"2020\">2020</option>\r\n                                <option value=\"2019\">2019</option>\r\n                                <option value=\"2018\">2018</option>\r\n                                <option value=\"2017\">2017</option>\r\n                                <option value=\"2016\">2016</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"error\" > {formValue.error.startDate} </div>\r\n\r\n                    <div className=\"row\">\r\n                        <label className=\"label text\" htmlFor=\"notes\">Notes</label>\r\n                        <textarea onChange={changeValue} id=\"notes\" value={formValue.notes} className=\"input\" name=\"notes\" placeholder=\"\"\r\n                            style={{ height: '100%' }}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"buttonParent\">\r\n                        <Link to=\"\" className=\"resetButton button cancelButton\">Cancel</Link>\r\n\r\n                        <div className=\"submit-reset\">\r\n                            <button type=\"submit\" className=\"button submitButton\" id=\"submitButton\">{formValue.isUpdate ? 'Update' : 'Submit'}</button>\r\n                            <button type=\"button\" onClick={reset} className=\"resetButton button\">Reset</button>\r\n                        </div>\r\n                    </div >\r\n                </form >\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\nexport default withRouter(PayrollForm);","E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\services\\employee-service.js",[],"E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\config\\config.js",[],["47","48"],"E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\services\\axios-service.js",[],"E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\components\\home\\home.jsx",[],"E:\\node-workspace\\employee_payroll_app\\employee-payroll\\src\\components\\display\\display.jsx",["49","50"],"import React from \"react\";\r\nimport \"./display.scss\";\r\nimport deleteIcon from \"../../assets/icons/delete-black-18dp.svg\";\r\nimport editIcon from \"../../assets/icons/create-black-18dp.svg\";\r\nimport profile1 from \"../../assets/profile-images/Ellipse 1.png\";\r\nimport profile2 from \"../../assets/profile-images/Ellipse -3.png\";\r\nimport profile3 from \"../../assets/profile-images/Ellipse -7.png\";\r\nimport profile4 from \"../../assets/profile-images/Ellipse -8.png\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport EmployeeService from \"../../services/employee-service\";\r\n\r\nconst Display = (props) => {\r\n  const employeeService = new EmployeeService();\r\n\r\n  const update = (employeeId) => {\r\n    props.history.push(`payroll-form/${employeeId}`);\r\n  };\r\n\r\n  const remove = (employeeId) => {\r\n    employeeService\r\n      .deleteEmployee(employeeId)\r\n      .then((data) => {\r\n        console.log(\"data after delete\", data);\r\n        props.getAllEmployee();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error after delete\", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <table id=\"display\" className=\"display\">\r\n      <tbody>\r\n        <tr key={-1}>\r\n          <th>Profile Image</th>\r\n          <th>Name</th>\r\n          <th>Gender</th>\r\n          <th>Department</th>\r\n          <th>Salary</th>\r\n          <th>Start Date</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n        {props.employeeArray &&\r\n          props.employeeArray.map((element, ind) => (\r\n            <tr key={ind}>\r\n              <td><img className=\"profile\"\r\n                src={\r\n                  element.profile ===\r\n                    \"../../assets/profile-images/Ellipse 1.png\"\r\n                    ? profile1\r\n                    : element.profile ===\r\n                      \"../../assets/profile-images/Ellipse -3.png\"\r\n                      ? profile2\r\n                      : element.profile ===\r\n                        \"../../assets/profile-images/Ellipse.png\"\r\n                        ? profile3\r\n                        : profile4\r\n                }\r\n                alt=\"\"\r\n              />\r\n              </td>\r\n              <td>{element.name}</td>\r\n              <td className=\"gender\">{element.gender}</td>\r\n              <td>\r\n                {/* // {element.department && */}\r\n                {element.department.map((dept) => {\r\n                  (<div className=\"dept-label\">Sales</div>)\r\n                })} {/* // {element.department && */}\r\n                {element.department.map((dept) => {\r\n                  (<div className=\"dept-label\">Sales</div>)\r\n                })}\r\n              </td>\r\n              <td> ₹ {element.salary}</td>\r\n              <td>{element.startDate}</td>\r\n              <td>\r\n                <img\r\n                  onClick={() => remove(element.id)}\r\n                  src={deleteIcon}\r\n                  alt=\"delete\"\r\n                />\r\n                <img\r\n                  onClick={() => update(element.id)}\r\n                  src={editIcon}\r\n                  alt=\"edit\"\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\nexport default withRouter(Display); ",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":12},{"ruleId":"59","severity":1,"message":"60","line":52,"column":8,"nodeType":"61","endLine":52,"endColumn":10,"suggestions":"62"},{"ruleId":"51","replacedBy":"63"},{"ruleId":"53","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":66,"column":48,"nodeType":"67","messageId":"68","endLine":66,"endColumn":50},{"ruleId":"65","severity":1,"message":"66","line":69,"column":48,"nodeType":"67","messageId":"68","endLine":69,"endColumn":50},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getDataById' and 'params.id'. Either include them or remove the dependency array.","ArrayExpression",["71"],["69"],["70"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [getDataById, params.id]",{"range":"74","text":"75"},[1714,1716],"[getDataById, params.id]"]